.header {
  display: grid;
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr; // Created 6 rows to contain each element of the footer (no need for margins...)
  grid-template-columns: minmax(
    min-content,
    max-content
  ); // Should never be more narrow than the content (prevents overlap)
  grid-row-gap: 1.5rem;
  justify-content: center;
  background-color: $color-grey-dark-1;
  grid-column: full-start / col-end 6; // Because 'repeat(8)' was used, you have to define which line in there it ends on, i.e., 6
  background-image: linear-gradient(
      rgba($color-secondary, 0.93),
      rgba($color-secondary, 0.93)
    ),
    url(../img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 8rem;
  padding-top: 4rem;

  @media only screen and (max-width: $bp-medium) {
    grid-column: 1 / -1;
  }

  @media only screen and (max-width: $bp-small) {
    padding: 5rem;
  }

  &__logo {
    height: 3rem;
    justify-self: center;
  }

  // Keeps the button aligned to the X & Y grid lines

  &__btn {
    align-self: start;
    justify-self: start;
  }

  // Creating the border-top using a grid with the '::before' + '::after' psuedo classes

  &__seenon-text {
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;
    font-size: 1.6rem;
    color: $color-grey-light-2;

    &::before,
    &::after {
      content: "";
      height: 1px;
      display: block;
      background-color: currentColor; // Uses defined color set in the main declaration
    }
  }

  &__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-column-gap: 3rem;
    justify-content: center; // Centers logos in each grid cell
    align-items: center;

    img {
      max-height: 2.5rem; // Can be 2.5rem or less
      max-width: 100%; // Can be less than this too
      filter: brightness(70%);
    }
  }
}
